{"ast":null,"code":"var _jsxFileName = \"/Users/adamwalker/Developer/04-google-maps-r17-solution/src/components/Google_map.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst log = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return console.log.apply(null, [\"GoogleMap -->\", ...args]);\n};\nexport default class GoogleMap extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    log(\"shouldComponentUpdate >>>>\");\n    // log(\"this.props:\", this.props);\n    // log(\"this.state:\", this.state);\n    // log(\"nextState:\", nextState);\n    // log(\"nextProps:\", nextProps);\n    // log(\"<<<< shouldComponentUpdate\");\n\n    this.map.setZoom(nextProps.zoom);\n    return false;\n  }\n  componentDidMount() {\n    this.map = new window.google.maps.Map(this.refs.myMap, {\n      center: {\n        lat: this.props.lat,\n        lng: this.props.lng\n      },\n      zoom: this.props.zoom\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"myMap\",\n      className: \"map-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n}\nfunction GoogleMap2(_ref) {\n  _s();\n  let {\n    lat,\n    lng,\n    zoom\n  } = _ref;\n  const mapContainer = useRef(null);\n  const map = useRef(new window.google.maps.Map(mapContainer.current, {\n    center: {\n      lat,\n      lng\n    },\n    zoom\n  }));\n  useEffect(() => {\n    map.setCenter({\n      lat: nextProps.lat,\n      lng: nextProps.lng\n    });\n  }, [lat, lng]);\n  useEffect(() => {\n    map.setZoom(zoom);\n  }, [zoom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainer,\n    className: \"map-box\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s(GoogleMap2, \"YucpQ3b8IpldxLXyPEsMQhZZIbE=\");\n_c = GoogleMap2;\nvar _c;\n$RefreshReg$(_c, \"GoogleMap2\");","map":{"version":3,"names":["React","Component","useEffect","useRef","log","args","console","apply","GoogleMap","shouldComponentUpdate","nextProps","nextState","map","setZoom","zoom","componentDidMount","window","google","maps","Map","refs","myMap","center","lat","props","lng","render","GoogleMap2","mapContainer","current","setCenter"],"sources":["/Users/adamwalker/Developer/04-google-maps-r17-solution/src/components/Google_map.js"],"sourcesContent":["import React, { Component, useEffect, useRef } from \"react\";\nconst log = (...args) => console.log.apply(null, [\"GoogleMap -->\", ...args]);\n\nexport default class GoogleMap extends Component {\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    log(\"shouldComponentUpdate >>>>\");\n    // log(\"this.props:\", this.props);\n    // log(\"this.state:\", this.state);\n    // log(\"nextState:\", nextState);\n    // log(\"nextProps:\", nextProps);\n    // log(\"<<<< shouldComponentUpdate\");\n    \n    this.map.setZoom(nextProps.zoom);\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.map = new window.google.maps.Map(this.refs.myMap, {\n      center: { lat: this.props.lat, lng: this.props.lng },\n      zoom: this.props.zoom\n    });\n  }\n\n  render() {\n    return <div ref=\"myMap\" className=\"map-box\" />;\n  }\n}\n\n\nfunction GoogleMap2({ lat, lng, zoom }) {\n  const mapContainer = useRef(null)\n  const map = useRef(new window.google.maps.Map(mapContainer.current, {\n    center: { lat, lng },\n    zoom,\n  }))\n\n  useEffect(() => {\n    map.setCenter({ lat: nextProps.lat, lng: nextProps.lng });\n  }, [lat, lng])\n\n  useEffect(() => {\n    map.setZoom(zoom);\n  }, [zoom])\n  \n  return <div ref={ mapContainer } className=\"map-box\" />\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAC5D,MAAMC,GAAG,GAAG;EAAA,kCAAIC,IAAI;IAAJA,IAAI;EAAA;EAAA,OAAKC,OAAO,CAACF,GAAG,CAACG,KAAK,CAAC,IAAI,EAAE,CAAC,eAAe,EAAE,GAAGF,IAAI,CAAC,CAAC;AAAA;AAE5E,eAAe,MAAMG,SAAS,SAASP,SAAS,CAAC;EAE/CQ,qBAAqB,CAACC,SAAS,EAAEC,SAAS,EAAE;IAC1CP,GAAG,CAAC,4BAA4B,CAAC;IACjC;IACA;IACA;IACA;IACA;;IAEA,IAAI,CAACQ,GAAG,CAACC,OAAO,CAACH,SAAS,CAACI,IAAI,CAAC;IAEhC,OAAO,KAAK;EACd;EAEAC,iBAAiB,GAAG;IAClB,IAAI,CAACH,GAAG,GAAG,IAAII,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACrDC,MAAM,EAAE;QAAEC,GAAG,EAAE,IAAI,CAACC,KAAK,CAACD,GAAG;QAAEE,GAAG,EAAE,IAAI,CAACD,KAAK,CAACC;MAAI,CAAC;MACpDX,IAAI,EAAE,IAAI,CAACU,KAAK,CAACV;IACnB,CAAC,CAAC;EACJ;EAEAY,MAAM,GAAG;IACP,oBAAO;MAAK,GAAG,EAAC,OAAO;MAAC,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAChD;AACF;AAGA,SAASC,UAAU,OAAqB;EAAA;EAAA,IAApB;IAAEJ,GAAG;IAAEE,GAAG;IAAEX;EAAK,CAAC;EACpC,MAAMc,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMS,GAAG,GAAGT,MAAM,CAAC,IAAIa,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACS,YAAY,CAACC,OAAO,EAAE;IAClEP,MAAM,EAAE;MAAEC,GAAG;MAAEE;IAAI,CAAC;IACpBX;EACF,CAAC,CAAC,CAAC;EAEHZ,SAAS,CAAC,MAAM;IACdU,GAAG,CAACkB,SAAS,CAAC;MAAEP,GAAG,EAAEb,SAAS,CAACa,GAAG;MAAEE,GAAG,EAAEf,SAAS,CAACe;IAAI,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACF,GAAG,EAAEE,GAAG,CAAC,CAAC;EAEdvB,SAAS,CAAC,MAAM;IACdU,GAAG,CAACC,OAAO,CAACC,IAAI,CAAC;EACnB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBAAO;IAAK,GAAG,EAAGc,YAAc;IAAC,SAAS,EAAC;EAAS;IAAA;IAAA;IAAA;EAAA,QAAG;AACzD;AAAC,GAhBQD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}